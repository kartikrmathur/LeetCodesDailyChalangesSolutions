class Solution:
    def minEatingSpeed(self, piles: List[int], h: int) -> int:
        l,r = 1,max(piles)                            # declare boundaries
        while l<r:                                    # loop performing BS
            m = l+(r-l)//2                            # calculate medium
            hours = sum([ceil(p/m) for p in piles])   # calculate hours take
            if hours > h:                             # if eat too slow -> improve speed
                l = m + 1
            else:                                     # if eat too fast -> narrow r and converge to result
                r = m
        return l
